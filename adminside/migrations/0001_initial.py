# Generated by Django 5.1.3 on 2024-12-14 17:35

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(max_length=100)),
                ('ship_from_name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ship_date', models.DateField()),
                ('status', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cron',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('register_at', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='EmailConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_email', models.EmailField(max_length=254)),
                ('from_name', models.CharField(max_length=255)),
                ('smtp_host', models.CharField(max_length=255)),
                ('smtp_port', models.IntegerField()),
                ('smtp_user', models.EmailField(max_length=254)),
                ('smtp_password', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='LabelAPIConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_key', models.CharField(max_length=255)),
                ('host', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='newLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_type', models.CharField(choices=[('usps_priority', 'USPS Priority')], max_length=20)),
                ('package', models.CharField(choices=[('test', 'Test')], max_length=100)),
                ('ship_from', models.CharField(choices=[('no_saved_address', "Don't use saved Ship From Address"), ('address_1', 'Test name, Street Address 1, City 1, 424424, NY'), ('address_2', 'Bob Doe, 1431 Brushed Lane, Lawrenceville, 30045-5507, GA')], max_length=100)),
                ('weight', models.FloatField()),
                ('length', models.FloatField()),
                ('width', models.FloatField()),
                ('height', models.FloatField()),
                ('recipient_name', models.CharField(max_length=100)),
                ('recipient_company', models.CharField(blank=True, max_length=100, null=True)),
                ('recipient_address', models.CharField(max_length=200)),
                ('recipient_city', models.CharField(max_length=50)),
                ('recipient_zip_code', models.CharField(max_length=10)),
                ('recipient_state', models.CharField(max_length=50)),
                ('recipient_phone', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_number', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('gateway', models.CharField(max_length=50)),
                ('previous_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('request_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('new_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('request_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_key', models.CharField(max_length=255)),
                ('stripe_secret', models.CharField(max_length=255)),
                ('stripe_webhook_secret', models.CharField(max_length=255)),
                ('coinbase_key', models.CharField(max_length=255)),
                ('coinbase_webhook_secret', models.CharField(max_length=255)),
                ('venmo_email', models.EmailField(max_length=254)),
                ('cashapp_email', models.EmailField(max_length=254)),
                ('zelle_email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('duration', models.CharField(max_length=50)),
                ('requested_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Signin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('rememberme', models.BooleanField(default=False)),
                ('recaptcha', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Signup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('rememberme', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=50)),
                ('value', models.CharField(choices=[('Priority', 'Priority'), ('Express', 'Express'), ('First Class', 'First Class'), ('Signature', 'Signature')], default='Priority', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Weight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_weight', models.FloatField()),
                ('to_weight', models.FloatField()),
                ('user_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reseller_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('role', models.CharField(max_length=50, null=True)),
                ('date_of_creation', models.DateField(auto_now_add=True, null=True)),
                ('last_login_date', models.DateField(blank=True, null=True)),
                ('is_super_admin', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_address', models.EmailField(max_length=254, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_seen', models.BooleanField()),
                ('send_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
                ('send_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
